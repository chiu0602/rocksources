<?php
// Call SchemaTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'SchemaTest::main');
}

require_once 'PHPUnit/Framework.php';
require_once realpath(dirname(__FILE__)) . '/../Schema.php';

/**
 * Test class for Schema.
 * Generated by PHPUnit on 2008-05-14 at 09:40:20.
 */
class SchemaTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Schema
     * @access protected
     */
    protected $schema;
    
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('SchemaTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
    }

    /**
     * Test load schema from file and table().
     */
    public function testLoadSchemaFromFileAndTable() {
        $this->schema = new Schema(realpath(dirname(__FILE__)).'/Schema_TestSchema.js');

        $this->assertTrue( is_object($this->schema->Database_RowTest) );
        $userSchema = $this->schema->table('Database_RowTest');
        $this->assertTrue( is_object($userSchema) );
        $this->assertTrue( $userSchema !== false );
    }

    /**
     * Test load schema from array and table().
     */
    public function testLoadSchemaFromArrayAndTable() {
        $this->schema = new Schema(array(
            'Table1' => array(
                'field1' => true
            ),
            'Table2' => array(
                'field1' => true
            )
        ));

        $this->assertTrue( is_object($this->schema->Table2) );

        $userSchema = $this->schema->table('Table1');
        $this->assertTrue( is_object($userSchema) );
        $this->assertTrue( $userSchema !== false );
    }

    /**
     * issue:2
     * @expectedException        UnexpectedValueException
     * @expectedExceptionMessage The json cannot be decoded or if the encoded data is deeper than the recursion limit.
     */
    public function testLoadSchemaFromInvalidJson() {
        $schema = new Schema(realpath(dirname(__FILE__)).'/Schema_Invalid.js');
    }
}

// Call SchemaTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'SchemaTest::main') {
    SchemaTest::main();
}
?>
