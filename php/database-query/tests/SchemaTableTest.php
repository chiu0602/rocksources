<?php
// Call SchemaTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'SchemaTableTest::main');
}

require_once 'PHPUnit/Framework.php';
require_once realpath(dirname(__FILE__)) . '/../Schema.php';

/**
 * Test class for Schema.
 * Generated by PHPUnit on 2008-05-14 at 09:40:20.
 */
class SchemaTableTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Schema
     * @access protected
     */
    protected $userSchema;
    
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('SchemaTableTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
        $this->schema = new Schema(realpath(dirname(__FILE__)).'/Schema_TestSchema.js');
        $this->userSchema = $this->schema->table('Database_RowTest');
    }

    /**
     */
    public function testGetAttribute() {
        $this->assertEquals('id', $this->userSchema->attribute('primaryKey'));
        $this->assertEquals('id', $this->userSchema->_primaryKey);
        $this->assertTrue( isset($this->userSchema->_primaryKey) );
    }

    /**
     */
    public function testSetAttribute() {
        $this->assertEquals('name', $this->userSchema->attribute('foreignKey', 'name'));
    }

    public function testColumns() {
        $columns = $this->userSchema->columnList();
        $this->assertContains('id', $columns);
        $this->assertContains('name', $columns);
        $this->assertContains('password', $columns);
    }

    public function testGetColumn() {
        $this->assertTrue( is_object($this->userSchema->column('id')));
        $this->assertTrue( is_object($this->userSchema->id ));
        $this->assertTrue( isset($this->userSchema->id) );
    }

    public function testColumnsFromArraySchema() {
        $schema = new Schema(array(
            'Table1' => array(
                'field1' => true,
                'field2' => true
            )
        ));
        $tableSchema = $schema->table('Table1');

        $columns = $tableSchema->columnList();
        $this->assertContains('field1', $columns);
        $this->assertContains('field2', $columns);
    }

    public function testAttributeSyntax() {
        $schema = new Schema(array(
            'Table1' => array(
                '_primaryKey' => 'id',
                'id' => true,
                'name' => true
            ),
            'Table2' => array(
                '@primaryKey' => 'name',
                'id' => true,
                'name' => true
            )

        ));
        $tableSchema = $schema->table('Table1');
        $this->assertEquals('id', $tableSchema->attribute('primaryKey'));
        $tableSchema = $schema->table('Table2');
        $this->assertEquals('name', $tableSchema->attribute('primaryKey'));
    }

}

// Call SchemaTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'SchemaTableTest::main') {
    SchemaTableTest::main();
}
?>
